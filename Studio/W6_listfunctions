//Studio S6
//Q1: write map using accumulate
function my_map(f, xs) {
    return accumulate((x, acc) => append(list(f(x)), acc), null, xs);
}


//Q2: remove duplicates
function remove_duplicates(lst) {
    if (is_null(lst)) {
        return null;
    } else {
        //clear out all subsequent elements in the list that equals the first element
        return append(list(head(lst)),
                      remove_duplicates(filter(x => x !== head(lst), tail(lst)))
                     );
    }
}

//Q3: combinations to make exact change based on what coins you have
function makeup_amount(x, coins) {
    if (x === 0) {
        return list(null);
    } else if (x < 0 || is_null(coins)) {
        return null;
    } else {
        // Combinations that do not use the head coin.
        const combi_A = makeup_amount(x, tail(coins));
        
        // Combinations that do not use the head coin
        // for the remaining amount.
        
        // Combinations that use the head coin.
        const combi_C = map(lst => append(list(head(coins)), lst),
                            makeup_amount(x - head(coins), tail(coins))
                           );
        
        return append(combi_A, combi_C);
    }
}

display_list(makeup_amount(22, list(1, 10, 5, 20, 1, 5, 1, 50)));
